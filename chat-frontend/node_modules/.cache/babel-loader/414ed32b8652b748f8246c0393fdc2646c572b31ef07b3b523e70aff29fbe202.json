{"ast":null,"code":"var _jsxFileName = \"/Users/enderpeyzner/Downloads/CompSci/DUHackathon/chat-frontend/src/pages/Chat.js\",\n  _s = $RefreshSig$();\n// Chat.js\n\nimport React, { useState, useEffect } from 'react';\nimport styles from \"../styles/Chat.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = ({\n  currentUser\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [user, setUser] = useState('');\n  const [message, setMessage] = useState('');\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/messages');\n      const data = await response.json();\n      setMessages(data);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  const sendMessage = async () => {\n    try {\n      await fetch('http://localhost:8080/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: \"include\",\n        body: JSON.stringify({\n          user,\n          message\n        })\n      });\n\n      // Clear the message input after sending\n      setMessage('');\n      // Fetch messages to update the list\n      fetchMessages();\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  const clearMessages = async () => {\n    if (!window.confirm(\"Are you sure you want to clear the chat?\")) return;\n    try {\n      const response = await fetch(\"http://localhost:8080/messages\", {\n        method: \"DELETE\"\n      });\n      if (!response.ok) throw new Error(\"Failed to clear chat\");\n\n      // Optionally, refresh messages after clearing\n      fetchMessages(); // Your existing function to reload messages\n    } catch (error) {\n      console.error(\"Clear chat error:\", error);\n      alert(\"Could not clear chat. Try again.\");\n    }\n  };\n  useEffect(() => {\n    // Fetch messages on component mount\n    fetchMessages();\n    // Poll for new messages every 2 seconds\n    const interval = setInterval(() => {\n      fetchMessages();\n    }, 2000);\n    return () => clearInterval(interval);\n  }, []); // Run only once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.chatContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.messagesContainer,\n      children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.message} ${msg.user === user ? styles.user : styles.other}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.user, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), \" \", msg.message]\n      }, msg._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        value: user,\n        className: styles.messageInput,\n        children: username || 'Guest'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        className: styles.messageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        className: styles.sendButton,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearMessages,\n        className: styles.sendButton,\n        style: {\n          backgroundColor: '#e74c3c',\n          marginLeft: '0.5rem'\n        },\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"vgIXI70xT3U40yO1Naxws4REG+Q=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","styles","jsxDEV","_jsxDEV","Chat","currentUser","_s","messages","setMessages","user","setUser","message","setMessage","fetchMessages","response","fetch","data","json","error","console","sendMessage","method","headers","credentials","body","JSON","stringify","clearMessages","window","confirm","ok","Error","alert","interval","setInterval","clearInterval","className","chatContainer","children","messagesContainer","map","msg","other","fileName","_jsxFileName","lineNumber","columnNumber","_id","inputContainer","value","messageInput","username","type","placeholder","onChange","e","target","onClick","sendButton","style","backgroundColor","marginLeft","_c","$RefreshReg$"],"sources":["/Users/enderpeyzner/Downloads/CompSci/DUHackathon/chat-frontend/src/pages/Chat.js"],"sourcesContent":["// Chat.js\n\nimport React, { useState, useEffect } from 'react';\nimport styles from \"../styles/Chat.module.css\"\n\nconst Chat = ({currentUser}) => {\n\tconst [messages, setMessages] = useState([]);\n\tconst [user, setUser] = useState('');\n\tconst [message, setMessage] = useState('');\n\n\tconst fetchMessages = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch('http://localhost:8080/messages');\n\t\t\tconst data = await response.json();\n\t\t\tsetMessages(data);\n\t\t} catch (error) {\n\t\t\tconsole.error('Error fetching messages:', error);\n\t\t}\n\t};\n\n\tconst sendMessage = async () => {\n\t\ttry {\n\t\t\tawait fetch('http://localhost:8080/messages', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tcredentials: \"include\",\n\t\t\t\tbody: JSON.stringify({ user, message }),\n\t\t\t});\n\n\t\t\t// Clear the message input after sending\n\t\t\tsetMessage('');\n\t\t\t// Fetch messages to update the list\n\t\t\tfetchMessages();\n\t\t} catch (error) {\n\t\t\tconsole.error('Error sending message:', error);\n\t\t}\n\t};\n\n\tconst clearMessages = async () => {\n\t\tif (!window.confirm(\"Are you sure you want to clear the chat?\")) return;\n\n\t\ttry {\n\t\t\tconst response = await fetch(\"http://localhost:8080/messages\", {\n\t\t\tmethod: \"DELETE\",\n\t\t\t});\n\t\t\t\n\t\t\tif (!response.ok) throw new Error(\"Failed to clear chat\");\n\t\t\t\n\t\t\t\n\t\t\t// Optionally, refresh messages after clearing\n\t\t\tfetchMessages(); // Your existing function to reload messages\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Clear chat error:\", error);\n\t\t\talert(\"Could not clear chat. Try again.\");\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\t// Fetch messages on component mount\n\t\tfetchMessages();\n\t\t// Poll for new messages every 2 seconds\n\t\tconst interval = setInterval(() => {\n\t\t\tfetchMessages();\n\t\t}, 2000);\n\n\t\treturn () => clearInterval(interval);\n\t}, []); // Run only once on mount\n\n\treturn (\n        <div className={styles.chatContainer}>\n            <div className={styles.messagesContainer}>\n                {messages.map((msg) => (\n                    <div \n                        key={msg._id}\n                        className={`${styles.message} ${\n                            msg.user === user ? styles.user : styles.other\n                        }`}\n                    >\n                        <strong>{msg.user}:</strong> {msg.message}\n                    </div>\n                ))}\n            </div>\n            \n            <div className={styles.inputContainer}>\n                {/* <input\n                    type=\"text\"\n                    placeholder=\"Your name\"\n                    value={user}\n                    onChange={(e) => setUser(e.target.value)}\n                    className={styles.messageInput}\n                /> */}\n\t\t\t\t<div value={user} className={styles.messageInput}>\n       \t\t\t \t{username || 'Guest'}\n      \t\t\t</div>\n                <input\n                    type=\"text\"\n                    placeholder=\"Type your message...\"\n                    value={message}\n                    onChange={(e) => setMessage(e.target.value)}\n                    className={styles.messageInput}\n                />\n                <button \n                    onClick={sendMessage}\n                    className={styles.sendButton}\n                >\n                    Send\n                </button>\n                <button \n                    onClick={clearMessages}\n                    className={styles.sendButton}\n                    style={{ backgroundColor: '#e74c3c', marginLeft: '0.5rem' }}\n                >\n                    Clear\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}