{"ast":null,"code":"var _jsxFileName = \"/Users/enderpeyzner/Downloads/CompSci/DUHackathon/chat-frontend/src/pages/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from \"../styles/Chat.module.css\";\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const {\n    username\n  } = useAuth();\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/messages', {\n        credentials: 'include'\n      });\n      const data = await response.json();\n      setMessages(data);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  const sendMessage = async () => {\n    try {\n      await fetch('http://localhost:8080/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          user: username,\n          message\n        })\n      });\n      setMessage('');\n      fetchMessages();\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  const clearMessages = async () => {\n    if (!window.confirm('Are you sure you want to clear the chat?')) return;\n    try {\n      const response = await fetch('http://localhost:8080/messages', {\n        method: 'DELETE',\n        credentials: 'include'\n      });\n      if (!response.ok) throw new Error('Failed to clear chat');\n      fetchMessages();\n    } catch (error) {\n      console.error('Clear chat error:', error);\n      alert('Could not clear chat. Try again.');\n    }\n  };\n  useEffect(() => {\n    fetchMessages();\n    const interval = setInterval(fetchMessages, 2000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.chatContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.messagesContainer,\n      children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.message} ${msg.user === username ? styles.user : styles.other}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.user, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), \" \", msg.message]\n      }, msg._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.messageInput,\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        className: styles.messageInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        className: styles.sendButton,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearMessages,\n        className: styles.sendButton,\n        style: {\n          backgroundColor: '#e74c3c',\n          marginLeft: '0.5rem'\n        },\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"RmQdiRBSHlvegvkCoZH6pLZ82Qs=\", false, function () {\n  return [useAuth];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","styles","useAuth","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","message","setMessage","username","fetchMessages","response","fetch","credentials","data","json","error","console","sendMessage","method","headers","body","JSON","stringify","user","clearMessages","window","confirm","ok","Error","alert","interval","setInterval","clearInterval","className","chatContainer","children","messagesContainer","map","msg","other","fileName","_jsxFileName","lineNumber","columnNumber","_id","inputContainer","messageInput","type","placeholder","value","onChange","e","target","onClick","sendButton","style","backgroundColor","marginLeft","_c","$RefreshReg$"],"sources":["/Users/enderpeyzner/Downloads/CompSci/DUHackathon/chat-frontend/src/pages/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from \"../styles/Chat.module.css\";\nimport { useAuth } from '../contexts/AuthContext';\n\nconst Chat = () => {\n  \n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const { username} = useAuth();\n\n  const fetchMessages = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/messages', {\n        credentials: 'include'\n      });\n      const data = await response.json();\n      setMessages(data);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n\n  const sendMessage = async () => {\n\n    try {\n      await fetch('http://localhost:8080/messages', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        credentials: 'include',\n        body: JSON.stringify({ user: username, message })\n      });\n\n      setMessage('');\n      fetchMessages();\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n\n  const clearMessages = async () => {\n    if (!window.confirm('Are you sure you want to clear the chat?')) return;\n\n    try {\n      const response = await fetch('http://localhost:8080/messages', {\n        method: 'DELETE',\n        credentials: 'include'\n      });\n      if (!response.ok) throw new Error('Failed to clear chat');\n      fetchMessages();\n    } catch (error) {\n      console.error('Clear chat error:', error);\n      alert('Could not clear chat. Try again.');\n    }\n  };\n\n  useEffect(() => {\n    fetchMessages();\n    const interval = setInterval(fetchMessages, 2000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className={styles.chatContainer}>\n      <div className={styles.messagesContainer}>\n        {messages.map(msg => (\n          <div\n            key={msg._id}\n            className={`${styles.message} ${msg.user === username ? styles.user : styles.other}`}\n          >\n            <strong>{msg.user}:</strong> {msg.message}\n          </div>\n        ))}\n      </div>\n\n      <div className={styles.inputContainer}>\n        <div className={styles.messageInput}>\n          {username}\n        </div>\n        <input\n          type=\"text\"\n          placeholder=\"Type your message...\"\n          value={message}\n          onChange={e => setMessage(e.target.value)}\n          className={styles.messageInput}\n        />\n        <button onClick={sendMessage} className={styles.sendButton}>\n          Send\n        </button>\n        <button\n          onClick={clearMessages}\n          className={styles.sendButton}\n          style={{ backgroundColor: '#e74c3c', marginLeft: '0.5rem' }}\n        >\n          Clear\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}